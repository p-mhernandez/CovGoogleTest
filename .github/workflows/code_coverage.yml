# This is a basic workflow to help you get started with the Run C/C++test action for a CMake-based project.
name: C/C++test with CMake

on:
  # Triggers the workflow on push or pull request events but only for the master (main) branch.
  push:
    branches: [ master, main ]
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  run-cpptest-make:
    name: Analyze project with C/C++test

    # Specifies required permissions for upload-sarif action
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: write
      contents: write
      id-token: write
      pages: write

    environment: 
      name: github-pages

    env:
      LINE_COV_GATE: 70 
      STATEMENT_COV_GATE: 70
      MCDC_COV_GATE: 30
      
    # Specifies the type of runner that the job will run on.
    runs-on: wsl

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:

    # Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Echo location and create build folder for cmake
      shell: bash 
      working-directory: ${{github.workspace}}
      run: ls -al && mkdir build
      
    # Configures your CMake project
    - name: Configure project
      shell: bash
      working-directory: ${{github.workspace}}
      run: cd build && cmake -DCPPTEST_COVERAGE=ON -DCPPTEST_HOME=/home/mhernandez/cpptest-coverage ..

    # Build project with Make 
    - name: Build project (optional)
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: make
    # Execute Google Tests
    - name: Run Google Tests and execute application
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: ./goo_test --gtest_output=xml:gtest.xml
    
    # Runs code coverage with C/C++test CT and create report 
    - name: Run C/C++test CT Compute and Report
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: make cpptestcov-compute && make cpptestcov-report

    - name: Rename Coverage Report
      working-directory: ${{github.workspace}}
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: ls -la
    - name: Setup Pages
      uses: actions/configure-pages@v3
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        # Upload entire repository
        path: ${{github.workspace}}/.coverage/report_html
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
      
      # Using cpptestcov query for quality gates: -coverage LC,SC,BC,DC,SCC,MCDC,FC,CC
    - name: Line Coverage Gates
      working-directory: ${{github.workspace}}
      shell: bash 
      run: NUMBER=$(/home/mhernandez/cpptest-coverage/bin/cpptestcov query -coverage LC .coverage/) && if [ $NUMBER -lt $LINE_COV_GATE ]; then echo "Line coverage quality gate failed"; echo "Expected result $LINE_COV_GATE%, echieved $NUMBER%"; echo "Check html report https://p-mhernandez.github.io/CovGoogleTest/"; false; else echo "Line coverage quality gate passed with $NUMBER% (required $LINE_COV_GATE%)"; echo "check html report https://p-mhernandez.github.io/CovGoogleTest/ for details"; true; fi     

    - name: Statement Coverage Gates
      working-directory: ${{github.workspace}}
      shell: bash 
      run: NUMBER=$(/home/mhernandez/cpptest-coverage/bin/cpptestcov query -coverage SC .coverage/) && if [ $NUMBER -lt $STATEMENT_COV_GATE ]; then echo "Statement coverage quality gate failed"; echo "Expected result $STATEMENT_COV_GATE%, achieved $NUMBER%"; echo "Check html report https://p-mhernandez.github.io/CovGoogleTest/"; false; else echo "Statement coverage quality gate passed with $NUMBER% (required $STATEMENT_COV_GATE%)"; echo "check html report https://p-mhernandez.github.io/CovGoogleTest/ for details"; true; fi     

    - name: MCDC Coverage Gates
      working-directory: ${{github.workspace}}
      shell: bash 
      run: NUMBER=$(/home/mhernandez/cpptest-coverage/bin/cpptestcov query -coverage MCDC .coverage/) && if [ $NUMBER -lt $MCDC_COV_GATE ]; then echo "MCDC coverage quality gate failed"; echo "Expected result $MCDC_COV_GATE%, achieved $NUMBER%"; echo "Check html report https://p-mhernandez.github.io/CovGoogleTest/"; false; else echo "MCDC coverage quality gate passed with $NUMBER% (required $MCDC_COV_GATE%)"; echo "check html report https://p-mhernandez.github.io/CovGoogleTest/ for details"; true; fi
    # Upload entire coverage directory
    - name: Archive coverage
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: CpptestCoverage
        path: ${{github.workspace}}/.coverage/

